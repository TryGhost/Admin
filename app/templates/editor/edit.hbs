<section class="gh-view">

    <header class="gh-editor-header">
        <div class="gh-editor-status">
        {{#if model.isPublished}}
            Published
        {{else if model.isScheduled}}
            Scheduled
        {{else}}
            Draft
        {{/if}}

        </div>
        <section class="view-actions">
            <button type="button" class="post-settings" title="Post Settings" {{action "openSettingsMenu"}}>
                <i class="icon-settings"></i>
            </button>
            {{gh-editor-save-button
                isPublished=model.isPublished
                isScheduled=model.isScheduled
                willPublish=willPublish
                willSchedule=willSchedule
                statusFreeze=statusFreeze
                scheduledWillPublish=scheduledWillPublish
                timeScheduled=model.timeScheduled
                postOrPage=postOrPage
                isNew=model.isNew
                save="save"
                setSaveType="setSaveType"
                delete="toggleDeletePostModal"
                submitting=submitting
            }}
        </section>
    </header>
    <div class="gh-editor-container">
        <div class="gh-editor-inner">
            {{#gh-view-title classNames="gh-editor-title" openMobileMenu="openMobileMenu"}}
                {{gh-trim-focus-input model.titleScratch type="text" id="entry-title" placeholder="Your Post Title" tabindex="1" shouldFocus=shouldFocusTitle focus-out="updateTitle" update=(action (perform updateTitle)) keyDown=(action "titleKeyDown")}}
            {{/gh-view-title}}
            {{#if scheduleCountdown}}
                <time datetime="{{post.publishedAtUTC}}" class="gh-notification gh-notification-schedule">
                    Post will be published {{scheduleCountdown}}.
                </time>
            {{/if}}
            {{ghost-editor
                value=(readonly model.scratch)
                onChange=(action (mut model.scratch))
                onFirstChange=(action "autoSaveNew")
                onTeardown=(action "cancelTimers")
                shouldFocusEditor=shouldFocusEditor
                apiRoot=apiRoot
                assetPath=assetPath
                tabindex=2
            }}
        </div>
    </div>
</section>

{{#if showDeletePostModal}}
    {{gh-fullscreen-modal "delete-post"
                          model=model
                          close=(action "toggleDeletePostModal")
                          modifier="action wide"}}
{{/if}}

{{#if showLeaveEditorModal}}
    {{gh-fullscreen-modal "leave-editor"
                          confirm=(action "leaveEditor")
                          close=(action "toggleLeaveEditorModal")
                          modifier="action wide"}}
{{/if}}

{{#if showReAuthenticateModal}}
    {{gh-fullscreen-modal "re-authenticate"
                          close=(action "toggleReAuthenticateModal")
                          modifier="action wide"}}
{{/if}}
